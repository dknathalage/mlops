---
# Source: kratos/templates/deployment-kratos.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kratos
  namespace: default
  labels:
    app.kubernetes.io/name: kratos
    helm.sh/chart: kratos-0.55.0
    app.kubernetes.io/instance: kratos
    app.kubernetes.io/version: "v1.3.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  progressDeadlineSeconds: 3600
  replicas: 1
  revisionHistoryLimit: 5
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: kratos
      app.kubernetes.io/instance: kratos
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kratos
        helm.sh/chart: kratos-0.55.0
        app.kubernetes.io/instance: kratos
        app.kubernetes.io/version: "v1.3.1"
        app.kubernetes.io/managed-by: Helm
      annotations:        
        checksum/kratos-config: 4e82fa0677335948e37d84d390c101587bf9e67da8596ed0828c7375e36b3afb
        checksum/kratos-templates: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
        checksum/kratos-secrets: 7588e52dadd9838064640dfad601b53bed5aee658108746639e652d32cf06900
    spec:
      initContainers:
      volumes:
        - name: kratos-config-volume
          configMap:
            name: kratos-config
      automountServiceAccountToken: false
      serviceAccountName: kratos
      terminationGracePeriodSeconds: 60
      containers:
        - name: kratos
          image: oryd/kratos:v1.3.1
          imagePullPolicy: IfNotPresent
          command:
            - kratos
          args:
            - serve
            - all
            - --config
            - /etc/config/kratos.yaml
          volumeMounts:
            - name: kratos-config-volume
              mountPath: /etc/config
              readOnly: true
          env:
            - name: SECRETS_DEFAULT
              valueFrom:
                secretKeyRef:
                  name: kratos
                  key: secretsDefault
                  optional: true
            - name: SECRETS_COOKIE
              valueFrom:
                secretKeyRef:
                  name: kratos
                  key: secretsCookie
                  optional: true
            - name: SECRETS_CIPHER
              valueFrom:
                secretKeyRef:
                  name: kratos
                  key: secretsCipher
                  optional: true
          ports:
            - name: http-admin
              containerPort: 4434
              protocol: TCP
            - name: http-public
              containerPort: 4433
              protocol: TCP
          lifecycle:
            {}
          readinessProbe:
            httpGet:
              path: /admin/health/alive
              port: 4434
              httpHeaders:
                - name: Host
                  value: '127.0.0.1'
            failureThreshold: 5
            initialDelaySeconds: 5
            periodSeconds: 10
          startupProbe:
            httpGet:
              path: /admin/health/ready
              port: 4434
              httpHeaders:
                - name: Host
                  value: '127.0.0.1'
            failureThreshold: 5
            initialDelaySeconds: 1
            periodSeconds: 1
            successThreshold: 1
            timeoutSeconds: 2
          resources:
            {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 65534
            runAsNonRoot: true
            runAsUser: 65534
            seLinuxOptions:
              level: s0:c123,c456
            seccompProfile:
              type: RuntimeDefault
      securityContext:
        fsGroup: 65534
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
        seccompProfile:
          type: RuntimeDefault
